/* This file was generated by SableCC (http://www.sablecc.org/). */

package node;

import analysis.*;

@SuppressWarnings("nls")
public final class AOp31Op3 extends POp3
{
    private TLessEq _lessEq_;

    public AOp31Op3()
    {
        // Constructor
    }

    public AOp31Op3(
        @SuppressWarnings("hiding") TLessEq _lessEq_)
    {
        // Constructor
        setLessEq(_lessEq_);

    }

    @Override
    public Object clone()
    {
        return new AOp31Op3(
            cloneNode(this._lessEq_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAOp31Op3(this);
    }

    public TLessEq getLessEq()
    {
        return this._lessEq_;
    }

    public void setLessEq(TLessEq node)
    {
        if(this._lessEq_ != null)
        {
            this._lessEq_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._lessEq_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._lessEq_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._lessEq_ == child)
        {
            this._lessEq_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._lessEq_ == oldChild)
        {
            setLessEq((TLessEq) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
